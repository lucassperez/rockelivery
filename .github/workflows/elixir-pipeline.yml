name: Elixir Pipeline

env:
  ELIXIR_VERSION: 1.12.1
  OTP_VERSION: 24

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04

    services:
      db:
        image: postgres:13
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version:  ${{ env.ELIXIR_VERSION }}
        otp-version:  ${{ env.OTP_VERSION }}

    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Run Credo
      run: mix credo --strict

    - name: Check coverage
      run: MIX_ENV=test mix do compile --warnings-as-errors, coveralls.json

    - name: Run Codecov script
      run: bash <(curl -s https://codecov.io/bash)

    - name: Run tests
      run: mix test

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8.1

      - uses: mhanberg/gigalixir-action@v0.4.0
        with:
          GIGALIXIR_APP: rockelivery-app
          GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
          GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
          MIGRATIONS: false
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
